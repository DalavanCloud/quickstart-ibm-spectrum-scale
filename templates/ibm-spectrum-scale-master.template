{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys the AWS IBM Spectrum Scale Quick Start. ***NOTE*** You must subscribe to the SpectrumScale AMI from the AWS Marketplace before you launch this template. See the deployment guide at http://aws.amazon.com/quickstart for details. This template creates Amazon EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
  	"AWS::CloudFormation::Interface" : {
  		"ParameterGroups" : [
  			{
  			    "Label": { 
  			    	"default": "File System Configurations :"
  			    },
  			    "Parameters": [
  			    	 "BlockSize", 
  			    	 "DataReplica",
  			    	 "GpfsMountPoint" 
  			      ]
  				},
  			 {
  			     "Label": {
  			      	 "default": "NSD Configurations:" 
  			      },
  			      "Parameters": [ 
  			      	 "EBSType",
  			      	 "DiskPerNode",
  			      	 "DiskSize" 
  			      ]
  			},
  			{
  			     "Label": {
  			          "default": "Server Node Configurations:" 
  			      },
  			      "Parameters": [
  			           "ServerNodeCount", 
  			           "ServerInstanceType"
  			       ]
  			},
  			{
  			    "Label": {
  			         "default": "Compute Node Configurations:"
  			     },
  			    "Parameters": [ 
  			           "ComputeNodeCount", 
  			           "ComputeInstanceType"
  			      ]
  			},
  			{
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "BastionAMIOS",
                        "BastionInstanceType",
                        "RemoteAccessCIDR"
                    ]
                },
  				{
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                },
                {
                  "Label": {
                        "default": "Personal Configuration"
                    },
                    "Parameters": [
                        "S3BucketName",
                        "OperatorEmail"
                    ]  
                },
  				{
  			   		"Label": {
  			       		"default": "License Information:"
  			   		},
  			   		"Parameters": [
  			       			"LicenseAgreementTerms"
  			   			]
  				 }
  		],
  		"ParameterLabels" : {
  		 
		    "BlockSize": {
		       "default": "BlockSize"
		    },
		    "DataReplica": {
		      "default": "Data replica"
		     },
		    "GpfsMountPoint": {
		      "default": "GPFS Mount Point"
		    },
		    "EBSType": {
		      "default": "EBS Type"
		    },
		    "DiskPerNode": {
		      "default": "Disk Per Node"
		    },
		    "DiskSize": {
		      "default": "Disk Size"
		    },
		    "ServerNodeCount": {
		      "default": "Server Node Count"
		    },
		    "ServerInstanceType": {
		      "default": "Server Instance Type"
		    },
		    "ComputeNodeCount": {
		      "default": "Compute Node Count"
		    },
		    "ComputeInstanceType": {
		      "default": "Compute Instance Type"
		    },
		    "LicenseAgreementTerms": {
		      "default": "License Agreement Terms"
		    },
            "QSS3BucketName": {
                "default": "Quick Start S3 Bucket Name"
            },
            "QSS3KeyPrefix": {
                "default": "Quick Start S3 Key Prefix"
            },
		    "AvailabilityZones": {
		      "default": "Availability Zone"
		    },
		    "VPCCIDR": {
		      "default": "VPC Id"
		    },
		    "PublicSubnet1CIDR": {
		      "default": "Public Subnet 1 Id"
		    },
		    "PublicSubnet2CIDR": {
		      "default": "Public Subnet 2 Id"
		    },
		    "PrivateSubnet1CIDR": {
		      "default": "Private Subnet 1 Id"
		    },
		    "PrivateSubnet2CIDR": {
		      "default": "Private Subnet 2 Id"
		    },
		    "RemoteAccessCIDR": {
		      "default": "Allowed External Access CIDR"
		    },
		    "KeyPairName": {
		      "default": "Key Name"
		    },
		    "BastionInstanceType" : {
		      "default" : "Bastion Instance Type"
		    },
		    "OperatorEmail" : {
		      "default" : "Operator Email"
		    },
		    "S3BucketName":{
		      "default": "S3 Bucket Name"
		    },
		    "BastionAMIOS":{
		      "default": "Bastion AMI OS"
		    }
  		}
  	}
  },
    "Parameters": {
        "LicenseAgreementTerms": {
            "AllowedValues": [
                "Accept"
            ],
            "Description": "LICENSE INFORMATION: Details License Information can be found in: https://s3-us-west-2.amazonaws.com/spectrumscale-web/License/license.html ",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "ssprojects",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "gpfsaws/QuickStarts/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "S3BucketName": {
            "Description": "Important: Enter your personal owned/created S3 bucket name for the Key/data store, if don't have then need to create first from S3 before going forword.",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Type": "String",
            "MinLength": "1",
            "ConstraintDescription": "Your own personal created bucket name needed here."
        },
	    "BlockSize": {
	      "Description": "File system block size",
	      "Type": "String",
	      "Default": "1M",
	      "AllowedValues": [
	         "256K", "512K", "1M", "2M", "4M", "8M", "16M"
	      ]
	    },
	    "DataReplica": {
	      "Description": "Data replica",
	      "Type": "Number",
	      "Default": "2",
	      "AllowedValues": [
             "1", "2"
          ]
	    },
	    "GpfsMountPoint": {
	      "Type": "String",
          "Default": "/gpfs/fs1",
          "AllowedPattern": "(/[a-zA-Z0-9]+)/([a-zA-Z0-9]+)",
          "Description": "The mount point for the Spectrum Scale volume i.e /gpfs/fs1"
	    },
	    "EBSType": {
	      "Description": "EBS Type",
	      "Type": "String",
	      "Default": "gp2",
	      "AllowedValues": [
	        "standard",
	        "gp2",
	        "io1"
	      ]
	    },
	    "DiskPerNode": {
	      "Description": "This number of disks would be attached to only with nsd server nodes",
	      "Type": "Number",
	      "Default": "1",
	      "AllowedValues": [
         		"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"
      	  ]
	    },
	    "DiskSize": {
	      "Description": "Supported disk size are MIN=5 and MAX=10240 (GB)",
          "Type": "Number",
          "Default": "5",
          "MinValue": "5",
          "MaxValue": "10240",
          "ConstraintDescription": "Alloed Disk size are MIN=5,MAX=10240 (GB)"
	    },
	    "ServerNodeCount": {
	      "Description": "Number of EC2 instances to launch for NSD Server on GPFS cluster (MIN=2, Max=64)",
          "Type": "Number",
          "Default": "2",
          "AllowedValues": [
              "2","4","6","8","10","12","14","16","18","20","22","24","26","28","30","32","34","36","38","40","42","44","46","48","50","52","54","56","58","60","62","64"
          ],
          "ConstraintDescription": "NSD Server node size must be between 2 to 64"
	    },
	    "ServerInstanceType": {
	      "Description": "Instance type to use for the NSD Server nodes instances",
	      "Type": "String",
	      "Default": "t2.micro",
	      "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge"
           ],
	      "ConstraintDescription": "must be a valid EC2 instance type."
	    },
	    "ComputeNodeCount": {
	      "Description": "Number of Compute node instances (MIN=1, MAX=64)",
	      "Type": "Number",
	      "Default": "2",
	      "MinValue": "1",
	      "MaxValue": "64",
	      "ConstraintDescription": "Compute node size must be between 1 to 64"
	    },
	    "ComputeInstanceType": {
	      "Description": "Instance type to use for the Compute node instances",
	      "Type": "String",
	      "Default": "t2.micro",
	      "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge"
          ],
	      "ConstraintDescription": "must be a valid EC2 instance type."
	    },
	    "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>",
            "AllowedPattern": "(([a-zA-Z]+)-([a-zA-Z]+)-([0-9a-z]+))",
            "ConstraintDescription": "Two Availability Zone must be added"
        },
        "VPCCIDR": {
            "Description": "CIDR Block for the VPC",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
	    "PublicSubnet1CIDR": {
	        "Description": "CIDR Block for the Public Subnet 1",
	        "Type": "String",
	        "Default": "10.0.0.0/24",
	        "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
	    },
	    "PublicSubnet2CIDR": {
	        "Description": "CIDR Block for the Public Subnet 2",
	        "Type": "String",
	        "Default": "10.0.2.0/24",
	        "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
	    },
	    "PrivateSubnet1CIDR": {
	        "Description": "CIDR Block for the Private Subnet 1",
	        "Type": "String",
	        "Default": "10.0.1.0/24",
	        "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
	    },
	    "PrivateSubnet2CIDR": {
	        "Description": "CIDR Block for the Private Subnet 2",
	        "Type": "String",
	        "Default": "10.0.3.0/24",
	        "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
	    },
        "BastionInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-14.04-LTS-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },   
	    "RemoteAccessCIDR": {
	      "Description": "Allowed CIDR block for external SSH access to the bastions i.e x.x.x.x/16-28 (default 0.0.0.0/0 can be accessed from anywhere)",
	      "Type": "String",
	      "Default": "0.0.0.0/0",
	      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
	      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/16-28."
	    },
	    "KeyPairName": {
	      "Description": "Name of an existing EC2 Key Pair",
	      "Type": "AWS::EC2::KeyPair::KeyName",
	      "MinLength": "1",
	      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
	    },
	    "OperatorEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address that notifications of any scaling operations will be sent to",
            "Type": "String"
        }
	  },
    "Resources": {
       "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "ClusterStack": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "BastionStack",
            "Properties": {
               "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/ibm-spectrum-scale.template"
                },
               "Parameters": {
				    "BlockSize": {
				      	"Ref": "BlockSize"
				    },
				    "DataReplica": {
				      	"Ref": "DataReplica"
				    },
				    "GpfsMountPoint": {
				    	"Ref": "GpfsMountPoint"
				    },
				    "EBSType": {
				        "Ref": "EBSType"
				    },
				    "DiskPerNode": {
				    	"Ref": "DiskPerNode"  
				    },
				    "DiskSize": {
				    	"Ref": "DiskSize"
				    },
				    "ServerNodeCount": {
				    	"Ref": "ServerNodeCount"
				    },
				    "ServerInstanceType": {
				    	"Ref": "ServerInstanceType"
				    },
				    "ComputeNodeCount": {
				    	"Ref": "ComputeNodeCount"
				    },
				    "ComputeInstanceType": {
				    	"Ref": "ComputeInstanceType"
				    },
				    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "VpcId": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
				    "BastionSecurityGroupID": {
				        "Fn::GetAtt": [
                                 "BastionStack",
                                 "Outputs.BastionSecurityGroupID"
                          ]
				    },
				    "S3BucketName": {
				         "Ref": "S3BucketName"
				    },
				    "KeyPairName": {
				    	"Ref": "KeyPairName"
				    },
				    "LicenseAgreementTerms": {
				        "Ref": "LicenseAgreementTerms"
				    },
				    "OperatorEmail" : {
				     	"Ref": "OperatorEmail"
				    }
				  }
	            }
        }
    }
}
